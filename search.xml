<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[给RecyclerView加上折叠的效果]]></title>
      <url>/2018/02/22/%E7%BB%99RecyclerView%E5%8A%A0%E4%B8%8A%E6%8A%98%E5%8F%A0%E7%9A%84%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<p>RecyclerView 有很高的自由度，可以说只有想不到没有做不到。这次用超简单的方法，让 RecyclerView 带上折叠的效果。</p>
<p>效果是这样的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/2018/02/22/给RecyclerView加上折叠的效果/1.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>总结一下这个列表的特点，就是以下三点：</p>
<ul>
<li>重叠效果；</li>
<li>层次感；</li>
<li>首项的差动。<br>下面我们来一个个解决。</li>
</ul>
<p>我们新建一个 ParallaxRecyclerView，让它继承 RecyclerView，并使用 LinearLayoutManager 作为布局管理器。</p>
<p><strong>重叠效果</strong></p>
<p>其实就是每一项都搭一部分在它前面那项而已。我们知道，RecyclerView 可以通过设置 ItemDecoration来实现列表的间隔效果，有没有想过要是把间隔设为负数会怎么样？比如：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">addItemDecoration(<span class="keyword">new</span> ItemDecoration() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getItemOffsets</span><span class="params">(Rect outRect, View view, RecyclerView parent, State state)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.getItemOffsets(outRect, view, parent, state);</span><br><span class="line">                outRect.bottom = -dp2px(context, <span class="number">10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>没错，这就实现了我们的重叠效果。</p>
<p><strong>层次感</strong></p>
<p>在 Material Design里是有Z轴这个概念的，我们可以给控件设置垂直于屏幕的高度，让不在同一高度的控件看起来有层次感。当然，我们要用 Material Design 的控件才有这个属性，这里我用的是 CardView。</p>
<p>我们给 ParallaxRecyclerView 增加一个滑动监听，在 onScrolled 方法里面做如下设置：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();</span><br><span class="line"><span class="keyword">int</span> firstPosition = layoutManager.findFirstVisibleItemPosition();</span><br><span class="line"><span class="keyword">int</span> lastPosition = layoutManager.findLastVisibleItemPosition();</span><br><span class="line"><span class="keyword">int</span> visibleCount = lastPosition - firstPosition;</span><br><span class="line"><span class="comment">//重置控件的高度</span></span><br><span class="line"><span class="keyword">int</span> elevation = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = firstPosition - <span class="number">1</span>; i &lt;= (firstPosition + visibleCount) + <span class="number">1</span>; i++) &#123;</span><br><span class="line">    View view = layoutManager.findViewByPosition(i);</span><br><span class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (view <span class="keyword">instanceof</span> CardView) &#123;</span><br><span class="line">            ((CardView) view).setCardElevation(dp2px(context, elevation));</span><br><span class="line">            elevation += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中，setCardElevation 方法就是用来给 CardView 设置高度的，这里让每一项的高度比它的上一项高 5dp。</p>
<p><strong>首项的差动</strong></p>
<p>最后，我们想给第一项增加一个差动效果，这个同样在 onScrolled方法里面做处理就好了：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">View firstView = layoutManager.findViewByPosition(firstPosition);</span><br><span class="line"><span class="keyword">float</span> firstViewTop = firstView.getTop();</span><br><span class="line">firstView.setTranslationY(-firstViewTop / <span class="number">2.0f</span>);</span><br></pre></td></tr></table></figure>
<p>这样相当于第一项的滑动速度变成原来的一半。但这也会导致一个问题， 由于改变了控件的位置，当这个控件被复用时，会出现位置不正确的情况。所以我们在设置高度的时候，可以顺便把控件的位置复原了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">float translationY = view.getTranslationY();</span><br><span class="line">if (i &gt; firstPosition &amp;&amp; translationY != 0) &#123;</span><br><span class="line">    view.setTranslationY(0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就完成了一个带有简单折叠效果的 RecyclerView 了，妥妥的。</p>
]]></content>
      
        
        <tags>
            
            <tag> 控件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android性能优化]]></title>
      <url>/2018/02/22/Android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>Android性能优化，是Android开发中的重中之中，本文将讲述如何进行性能优化。</p>
<p>实际项目中的Android性能优化主要有如下几个方面：</p>
<ol>
<li>编写高效代码—开发中总结出的一些小的性能Tips</li>
<li>Layout布局优化</li>
<li>内存优化</li>
</ol>
<h3 id="编写高效代码"><a href="#编写高效代码" class="headerlink" title="编写高效代码"></a>编写高效代码</h3><p>编写高效代码的两个原则</p>
<ol>
<li>不要写不需要的代码</li>
<li>不要分配不必要的内存</li>
</ol>
<p>以上两个原则，似乎感觉是废话，但确实是编程的最高境界，也是我们编写代码的过程中时刻需要思考和注意的两个方面。</p>
<p>那么如何做到如上两点呢？下面列出了一些实际开发中的例子。</p>
<p><strong>避免产生不必要的对象</strong></p>
<p>例如：</p>
<ul>
<li><p>int的数组比Integer对象数组要好得多。两个平行的int数组要比一个（int,int）型的对象数组高效。这对于其他任何基本数据类型的组合都通用</p>
</li>
<li><p>两个平行数组Foo[],Bar[]会优于一个（Foo,Bar）对象的数组</p>
</li>
<li><p>通常来讲，尽量避免创建短时零时对象.少的对象创建意味着低频的垃圾回收</p>
</li>
</ul>
<p>对象的分配和回收都是需要代价的；分配的内存越多，就会引起强制的内存回收；给用户体验增加小的停顿间隙，从而影响用户体验。</p>
<p>用户能感觉到卡顿的时间延迟是100ms ~ 200ms。</p>
<p><strong>用静态代替虚拟</strong></p>
<p>如果方法不需要访问某对像的字段，将该方法设置为静态，调用速度会提升15%~20%</p>
<p>对于常量使用static final </p>
<p>static final int i = 1;<br>static final String s = “a”;</p>
<blockquote>
<p>注：这种优化仅仅是针对基本数据类型和String类型常量的，而非任意的引用类型。但尽可能的将常量声明为static final是一种好的做法。</p>
</blockquote>
<p><strong>避免内部的getter和setter</strong></p>
<p><strong>使用增强for循环</strong></p>
<p>增强for循环要比普通循环快3倍</p>
<p><strong>避免使用浮点数</strong></p>
<p>通常，浮点数会比整型慢2/3</p>
<p><strong>在没有JIT的设备上，调用方法所传递的对象采用具体的类型而非接口类型会更高效</strong></p>
<ul>
<li>void methodA(List<string> list);</string></li>
<li>void methodA(ArrayList<string> list);</string></li>
</ul>
<p>如上，后一种比前一种更高效。</p>
<p><strong>数据库操作方法的优化<br>尽量利用原生的SQL语句</strong></p>
<p>原生的SQL省去了拼接sql语句的步骤，要比SqliteDatabase提供的insert、query、 update、delete等函数效率高。当数据库越大，差别也越大</p>
<p>当操作条数较多时，利用事务进行批处理</p>
<p>这样SQLite将把全部要执行的SQL语句先缓存在内存当中，然后等到COMMIT的时候一次性的写入数据库，这样数据库文件只被打开关闭了一次，效率自然大大的提高</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.beginTransaction();        </span><br><span class="line"><span class="keyword">for</span>(Collection c:colls)&#123;</span><br><span class="line">    insert(db, c);</span><br><span class="line">&#125; </span><br><span class="line">db.setTransactionSuccessful();</span><br></pre></td></tr></table></figure>
<p><strong>Http请求方式的选择</strong><br>Android 内置了两种HTTP方式:HttpURLConnection 和 Apache HttpClient。这两种都支持HTTPS、流式上传和下载、可配置超时、IPv6和连接池。在Gingerbread或者更高版本时，推荐使用HttpURLConnection。</p>
<p>这是因为： HttpURLConnection API 更简单，包更小。同时对传输数据的压缩和响应的缓存处理减少了网络带宽、提高了速度，也节省了电量。</p>
<h3 id="优化布局"><a href="#优化布局" class="headerlink" title="优化布局"></a>优化布局</h3><p>Layouts是Android应用里直接影响用户体验的一个关键部分。如果Layout设计的不好，可能导致你的应用大量的内存占用从而导致UI响应很慢。Android SDK提供了工具帮助你分析你的Layouts的性能问题。</p>
<p><strong>使用Hierarchy Viewer</strong></p>
<p>Hierarchy Viewer工具位于SDK \tools\目录下，该工具能分析出你的布局不合理和可以优化的地方。</p>
<p>大多数情况下，布局渲染时间差别较大的原因是在LinaerLayout里使用了layout_weight。这将会增加测量(Measure)的时间。你应该仔细的考虑是否有必要使用layout weight。</p>
<p><strong>使用Lint</strong></p>
<p>使用Lint — 查看你的view层级哪些地方可以优化</p>
<ul>
<li><p>使用compound drawables - 一个包含了ImageView与TextView的LinearLayout可以被当作一个compound drawable来处理</p>
</li>
<li><p>使用<merge> - 如果FramLayout仅仅是一个纯粹的（没有设置背景，间距等）布局根元素，我们可以使用merge标签来当作根标签</merge></p>
</li>
<li><p>无用的分支 - 如果一个layout并没有任何子组件，那么可以被移除，这样可以提高效率</p>
</li>
<li><p>无用的父控件 - 如果一个layout只有子控件，没有兄弟控件，并且不是一个ScrollView或者根节点，而且没有设置背景，那么我们可以移除这个父控件，直接把子控件提升为父控件</p>
</li>
<li><p>深层次的layout - 尽量减少内嵌的层级，考虑使用更多平级的组件 RelativeLayout or GridLayout来提升布局性能，默认最大的深度是10</p>
</li>
</ul>
<p><strong>其他一些布局要点</strong></p>
<ul>
<li>使用include标签</li>
<li>使用ViewStub标签</li>
</ul>
<h3 id="优化App内存"><a href="#优化App内存" class="headerlink" title="优化App内存"></a>优化App内存</h3><p>为了垃圾回收器能回收你系统的内存，你应该避免引起内存泄露，而且要在合适的时间点释放被引用的对象。</p>
<p><strong>慎用Service</strong></p>
<ol>
<li><p>Service执行完后台任务后要停止</p>
</li>
<li><p>使用IntentService</p>
</li>
</ol>
<p>IntentService不同于普通的Service之处是：</p>
<ul>
<li><p>提交的task系统会post到子线程运行</p>
</li>
<li><p>当后台运行的task完成时，系统会stop掉IntentService</p>
</li>
</ul>
<p><strong>Release memory when your user interface becomes hidden</strong></p>
<p>例如，在该onStop（）里做释放资源（例如网络连接、注销广播等）的工作</p>
<p><strong>使用优化后的集合容器</strong></p>
<p>例如：SparseArray、SparseBooleanArray、LongSpareArray …..</p>
<p><strong>尽量避免使用枚举</strong></p>
<p>相比于静态常量，枚举会有超过其两倍以上的内存开销，在android中需严格避免使用枚举</p>
<p><strong>避免使用依赖注入框架</strong></p>
<p><strong>使用ProGuard消除没有使用的代码</strong></p>
<p><strong>使用zipalign优化和对齐你的apk</strong></p>
<p><strong>使用MAT分析和优化内存</strong></p>
<ol>
<li><p>I/O使用后需要关闭，数据库和Cursor等使用后要关闭</p>
</li>
<li><p>使用finalize()+MAT 分析内存泄露</p>
</li>
</ol>
<p>end </p>
<p>Android优化主要就是内存、布局和性能的优化，本文总结了Android中优化的一些知识点。如果还有其他我没有讲到的，欢迎给我留言。</p>
]]></content>
      
        
        <tags>
            
            <tag> 性能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实现上滑屏幕，隐藏底部菜单栏]]></title>
      <url>/2018/02/09/%E5%AE%9E%E7%8E%B0%E4%B8%8A%E6%BB%91%E5%B1%8F%E5%B9%95%EF%BC%8C%E9%9A%90%E8%97%8F%E5%BA%95%E9%83%A8%E8%8F%9C%E5%8D%95%E6%A0%8F/</url>
      <content type="html"><![CDATA[<p>实现列表上滑的同时，隐藏底部菜单栏，下滑的同时，显示底部菜单栏。<br><a id="more"></a><br>本文主要实现的功能是底部菜单栏随用户手势滑动而变化。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1432108-401de738bac93f86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/228" alt="image" title="正常状态">
                </div>
                <div class="image-caption">正常状态</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://upload-images.jianshu.io/upload_images/1432108-fb2706ee8245bef1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/228" alt="image" title="上滑之后">
                </div>
                <div class="image-caption">上滑之后</div>
            </figure>
<h3 id="布局代码"><a href="#布局代码" class="headerlink" title="布局代码"></a>布局代码</h3><p>这个功能实现起来比较简单，主要利用了CoordinatorLayout的layout_behavior的属性。具体代码如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/toolbar"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/container"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.BottomNavigationView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/bottom_navigation"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">"@style/Widget.Design.BottomNavigationView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@color/viewBackground"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:elevation</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:itemIconTint</span>=<span class="string">"@drawable/nav_item_color_state"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:itemTextColor</span>=<span class="string">"@drawable/nav_item_color_state"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">"com.testapp.widget.behavior.BottomNavigationBehavior"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:menu</span>=<span class="string">"@menu/bottom_navigation_main"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面是activity_main的布局代码，第一个是菜单栏，第二个是内容界面，第三个是bottom。bottom导航栏这里采用是BottomNavigationView，具体用法不再介绍。<br>这里主要看一下BottomNavigationView的app:layout_behavior属性，该属性是协调布局特有的。网上的一版用法是</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app:layout_behavior="@string/appbar_scrolling_view_behavior"</span><br></pre></td></tr></table></figure>
<p>虽然表面上看是一个字符串，其实在里面调用的也是一个view类。这次我们通过自定义这个behavior类，实现底部菜单栏的显隐性。</p>
<h3 id="java实现类"><a href="#java实现类" class="headerlink" title="java实现类"></a>java实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BottomNavigationBehavior</span> <span class="keyword">extends</span> <span class="title">CoordinatorLayout</span>.<span class="title">Behavior</span>&lt;<span class="title">View</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ObjectAnimator outAnimator, inAnimator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BottomNavigationBehavior</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 垂直滑动</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartNestedScroll</span><span class="params">(CoordinatorLayout coordinatorLayout, View child, View directTargetChild, View target, <span class="keyword">int</span> nestedScrollAxes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nestedScrollAxes == ViewCompat.SCROLL_AXIS_VERTICAL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedPreScroll</span><span class="params">(CoordinatorLayout coordinatorLayout, View child, View target, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span>[] consumed)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dy &gt; <span class="number">0</span>) &#123;<span class="comment">// 上滑隐藏</span></span><br><span class="line">            <span class="keyword">if</span> (outAnimator == <span class="keyword">null</span>) &#123;</span><br><span class="line">                outAnimator = ObjectAnimator.ofFloat(child, <span class="string">"translationY"</span>, <span class="number">0</span>, child.getHeight());</span><br><span class="line">                outAnimator.setDuration(<span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!outAnimator.isRunning() &amp;&amp; child.getTranslationY() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                outAnimator.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dy &lt; <span class="number">0</span>) &#123;<span class="comment">// 下滑显示</span></span><br><span class="line">            <span class="keyword">if</span> (inAnimator == <span class="keyword">null</span>) &#123;</span><br><span class="line">                inAnimator = ObjectAnimator.ofFloat(child, <span class="string">"translationY"</span>, child.getHeight(), <span class="number">0</span>);</span><br><span class="line">                inAnimator.setDuration(<span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!inAnimator.isRunning() &amp;&amp; child.getTranslationY() &gt;= child.getHeight()) &#123;</span><br><span class="line">                inAnimator.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个类的就是刚刚那个app:layout_behavior=”com.meiji.toutiao.widget.behavior.BottomNavigationBehavior”属性标明的类，看起来很简单，继承了Behavior抽象类，然后实现了两个方法。</p>
<p><strong>onStartNestedScroll</strong>：这个方法主要用于监听协调布局的子view的滚动事件，当此方法返回true，表示要消耗此动作，继而执行下面的onNestedPreScroll方法，我们在代码中返回的是，滚动轴是不是竖直滚动轴。如果是的话，就返回true<br><strong>onNestedPreScroll</strong>：这个方法就比较简单了，当用户上滑的时候，隐藏底部菜单栏，这里使用了动画退出，使用了ObjectAnimator.ofFloat方法，第一个是view对象，指的就是bottom，第二个是Y轴的变化，第三个是Y轴变化的多少，接下来设置动画秒数。</p>
]]></content>
      
        
        <tags>
            
            <tag> 组件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过H5唤起本地app]]></title>
      <url>/2018/02/06/%E9%80%9A%E8%BF%87H5%E5%94%A4%E8%B5%B7%E6%9C%AC%E5%9C%B0app/</url>
      <content type="html"><![CDATA[<p>在安卓手机的浏览器中调起本地app<br><a id="more"></a><br>H5如何打开或者说唤起手机本地的app，有以下两种：</p>
<p>第一种方式：</p>
<p>通过在html的a标签里面的href中直接配置android端的schema，当然，如果有host其他的配置，跟在后面就可以了，android端配置和代码如下：</p>
<p>android端配置：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity android:name = <span class="string">".MainActivity"</span>&gt;</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name = <span class="string">"android.intent.action.MAIN"</span>/&gt;</span><br><span class="line">        &lt;category android:name = <span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">"android.intent.action.VIEW"</span>/&gt;</span><br><span class="line">        &lt;category android:name=<span class="string">"android.intent.category.DEFAULT"</span>/&gt;</span><br><span class="line">        &lt;category android:name=<span class="string">"android.intent.category.BROWSABLE"</span>/&gt;</span><br><span class="line">        &lt;data android:host=<span class="string">"baidu.com"</span></span><br><span class="line">           android:scheme=<span class="string">"testapp"</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure></p>
<p>注：如果这个是配置在启动页要和标签并列在一起，不然运行后手机app的图标会没有；注意schema协议要小写,否则会有不能响应的异常!</p>
<p>html代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"testapp://baidu.com/?pid=1"</span>&gt;</span>打开app<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里我们来看看schema拼接协议的格式：</p>
<p>&lt; a href=”[scheme]://[host]/[path]?[query]”&gt;启动应用程序&lt; /a&gt;</p>
<p>各个项目含义如下所示：</p>
<p>scheme：判别启动的App。</p>
<p>host：适当记述</p>
<p>path：传值时必须的key ※没有也可以</p>
<p>query：获取值的Key和Value ※没有也可以</p>
<p>以上就能实现打开本地的app了，当然是在app存在的情况下，否则的话没有反应。</p>
<p>我们有些时候在唤起本地app的时候可能会向app传递一些参数，这些参数我们就可以配置在path或者query里，我们只需要在oncreate里面获取就可以了。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">    Uri uri = intent.getData();</span><br><span class="line">    <span class="keyword">if</span> (uri != <span class="keyword">null</span>) &#123;</span><br><span class="line">        String pid = uri.getQueryParameter(<span class="string">"pid"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果还想要获取android里面配置的schema协议的话，还可以这样:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Uri uri = getIntent().getData();</span><br><span class="line"><span class="keyword">if</span>(uri != <span class="keyword">null</span>) &#123; </span><br><span class="line">    <span class="comment">// 完整的url信息</span></span><br><span class="line">    String url = uri.toString();</span><br><span class="line">    Log.e(TAG, <span class="string">"url: "</span>  + uri); </span><br><span class="line">    <span class="comment">// scheme部分</span></span><br><span class="line">    String scheme = uri.getScheme();</span><br><span class="line">    Log.e(TAG, <span class="string">"scheme: "</span>  + scheme); </span><br><span class="line">    <span class="comment">// host部分</span></span><br><span class="line">    String host = uri.getHost();</span><br><span class="line">    Log.e(TAG, <span class="string">"host: "</span>  + host); </span><br><span class="line">    <span class="comment">//port部分</span></span><br><span class="line">    <span class="keyword">int</span> port = uri.getPort();</span><br><span class="line">    Log.e(TAG, <span class="string">"host: "</span>  + port); </span><br><span class="line">    <span class="comment">// 访问路径</span></span><br><span class="line">    String path = uri.getPath();</span><br><span class="line">    Log.e(TAG, <span class="string">"path: "</span>  + path);</span><br><span class="line">    List&lt;String&gt; pathSegments = uri.getPathSegments(); </span><br><span class="line">    <span class="comment">// Query部分</span></span><br><span class="line">    String query = uri.getQuery();</span><br><span class="line">    Log.e(TAG, <span class="string">"query: "</span>  + query); </span><br><span class="line">    <span class="comment">//获取指定参数值</span></span><br><span class="line">    String pid = uri.getQueryParameter(<span class="string">"pid"</span>);</span><br><span class="line">    Log.e(TAG, <span class="string">"pid: "</span>  + pid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如何判断一个Schema是否有效 :</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PackageManager packageManager = getPackageManager();</span><br><span class="line">Intent intent = newIntent(Intent.ACTION_VIEW, Uri.parse(<span class="string">"testapp://baidu.com:80/article?goodsId=10011002"</span>));</span><br><span class="line">List&lt;ResolveInfo&gt; activities = packageManager.queryIntentActivities(intent, <span class="number">0</span>);</span><br><span class="line">booleanisValid = !activities.isEmpty();</span><br><span class="line"><span class="keyword">if</span>(isValid) &#123;</span><br><span class="line">    startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种方式也是我百度到的最多的方式，但是这样就带来了一个问题了，上面的需求说的是“在页面上有一个连接， 如果用户安装了APP，则点击打开对应的APP；如果用户没有安装，则点击打开对应的设置连接”，这明显就不符合需求了，这只能作为一些个别需求来使用了。</p>
<p>第二种方式：</p>
<p>既然通过在href配置schema协议不行，那就只能通过js代码来实现了，只有这样才能根据判断实现app有的时候就打开，没有的时候就跳转到下载链接下载。</p>
<p>我们知道，js是无法判断手机是否安装了某款app的，所以我们只能够曲线救国了，我们可以获取时间如果，长时间不能呼起app则默认为没有安装这款app，然后跳转到下载页。当然这不是我想出来的，是网上的各位大佬的想法。在这里又要细分为两种情况了。</p>
<p>1.直接唤醒</p>
<p>说明：通过h5可换醒app，如访问一个URL，点击按钮，打开应用，如果该应用APP没有安装，那么直接跳转到App Store的APP下载页面，通过点击的方式兼容性较好，如果安装了app，在手机各大浏览器(360浏览器、uc浏览器、搜狗浏览器、QQ浏览器、百度浏览器 )和QQ客户端中，能唤醒。微信、新浪微博客户端、腾讯微博客户端无法唤醒。</p>
<p>代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">http://www.w3.org/1999/xhtml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">Content-Type</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>点击唤醒demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">#zjmobliestart&#123;font-size:40px;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">说明：通过h5可换醒app，如访问一个URL，点击按钮，打开应用，如果该应用APP没有安装，那么直接跳转到App Store的APP下载页面，通过点击的方式。兼容性较好，如果安装了app，在手机各大浏览器(360浏览器 uc浏览器 搜狗浏览器 QQ浏览器 百度浏览器 )和</span></span><br><span class="line"><span class="comment">QQ客户端中，能唤醒。微信 新浪微博客户端 腾讯微博客户端无法唤醒。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"zjmobile://platformapi/startapp"</span> <span class="attr">id</span>=<span class="string">"zjmobliestart"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>唤醒浙江移动手机营业厅！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="undefined">function applink()&#123;  </span></span><br><span class="line"><span class="undefined">    return function()&#123;  </span></span><br><span class="line"><span class="undefined">        var clickedAt = +new Date;  </span></span><br><span class="line"><span class="undefined">         setTimeout(function()&#123;</span></span><br><span class="line"><span class="undefined">             !window.document.webkitHidden &amp;&amp; setTimeout(function()&#123; </span></span><br><span class="line"><span class="undefined">                   if (+new Date - clickedAt &lt; 2000)&#123;  </span></span><br><span class="line"><span class="undefined">                       window.location = 'https://itunes.apple.com/us/app/zhe-jiang-yi-dong-shou-ji/id898243566#weixin.qq.com';  </span></span><br><span class="line"><span class="undefined">                   &#125;  </span></span><br><span class="line"><span class="undefined">             &#125;, 500);</span></span><br><span class="line"><span class="undefined">         &#125;, 500)   </span></span><br><span class="line"><span class="undefined">    &#125;;  </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">applink();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2.点击唤醒</p>
<p>说明：通过h5可换醒app，如访问一个URL就能直接打开应用，如果该应用APP没有安装，那么直接跳转到App Store的APP下载页面。兼容性一般：在手机各大浏览器(360浏览器、uc浏览器、搜狗浏览器 QQ浏览器、百度浏览器 )能唤醒。微信、QQ客户端、新浪微博客户端、 腾讯微博客户端无法唤醒。</p>
<p>代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype html&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">http://www.w3.org/1999/xhtml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">Content-Type</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>直接唤醒demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">#zjmobliestart&#123;font-size:40px;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">说明：通过h5可换醒app，如访问一个URL就能直接打开应用，如果该应用APP没有安装，那么直接跳转到App Store的APP下载页面</span></span><br><span class="line"><span class="comment">兼容性一般：在手机各大浏览器(360浏览器 uc浏览器 搜狗浏览器 QQ浏览器 百度浏览器 )能唤醒。微信 QQ客户端 新浪微博客户端 腾讯微博客户端无法唤醒。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"zjmobliestart"</span>&gt;</span>唤醒浙江移动手机营业厅！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"> function applink()&#123;   </span></span><br><span class="line"><span class="undefined">    window.location = 'zjmobile://platformapi/startapp';  </span></span><br><span class="line"><span class="undefined">        var clickedAt = +new Date;  </span></span><br><span class="line"><span class="undefined">         setTimeout(function()&#123;</span></span><br><span class="line"><span class="undefined">             !window.document.webkitHidden &amp;&amp; setTimeout(function()&#123; </span></span><br><span class="line"><span class="undefined">                   if (+new Date - clickedAt &lt; 2000)&#123;  </span></span><br><span class="line"><span class="undefined">                       window.location = 'https://itunes.apple.com/us/app/zhe-jiang-yi-dong-shou-ji/id898243566#weixin.qq.com';  </span></span><br><span class="line"><span class="undefined">                   &#125;  </span></span><br><span class="line"><span class="undefined">             &#125;, 500);       </span></span><br><span class="line"><span class="undefined">         &#125;, 500)   </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">document.getElementById("zjmobliestart").onclick = applink();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就完成了我们的需求了。</p>
<p>还要注意的是，如果是在微信中唤起本地app，手机的微信中，是利用微信内置的浏览器打开那个简单的HTML页面，注意：直接打开scheme://host/datastring是不可行的，微信不会把这串字符解析成网址，必须包装成网页才能借助微信的浏览器打开。进入后就是我们刚刚设计的页面。这个时候，直接点击“启动应用程序”是不会唤醒之前安装的APP的，因为微信做了屏蔽，你需要在右上角的菜单中选择“在浏览器中打开”。这个时候就可以唤醒你想唤醒的app了。</p>
]]></content>
      
        
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
